Ruby

Webアプリケーション向けのプログラミング言語
日本人が開発したプログラミング言語
スクリプト言語（記述したプログラムをすぐに実行して動きを確認できる言語）
　<==>（実行するにはコンパイルする必要がある）

ファイルの実行
$ ruby 実行するプログラムファイル名

何らかの処理をさせる命令を「メソッド（関数）」と呼ぶ

文字列型　String
整数型　Integer

同じ型同士を＋でつなぐことができる
型が違うものを＋でつなげるとエラーが起きる
　→型変換を行うと違う型でも＋で接続することができる
整数型同士を＋でつなげると足し算が行われる
文字列型同士を＋でつなげると連結される

to_s （整数型→文字列型へ変換）
　ピリオドで繋げて記述
to_i (文字列型→整数型へ変換)



変数：オブジェクトに付ける名札のようなもの、呼び出せる
　1文字目は小文字アルファベットか＿、数字始まりはNG、単語を繋げる場合は_でつなげる
　グローバル変数、ローカル変数、インスタンス変数、クラス変数　それぞれ役割が異なる

= で変数へ代入
変数は書き換えることが可能
ファイルは上からすべて読まれる

定数：変更しないことが保証された数値やデータにつける名札
　始まりが大文字、単語をつなげる場合は_でつなげる
　定数は後から書き換えることができない
　（書き換えの記述自体はできるが、warningが出る。そうした記述はしないこと）

変数展開：変数の中身を展開すること
　＃｛変数｝：変数展開　変数がどんな型であっても文字列型に変換してくれる
　変数の中身が整数型か文字列型がわかりづらくなったり、そんなときに
変数展開では変数を使った演算結果なども展開することができる
　＃｛｝の中で計算を組み込んだりできる
ただし、変数展開はダブルクォーテーションで囲った場合のみ機能する。
　シングルクオーテーションでもダメ！


配列
　複数のデータをまとめて保存
ハッシュ
 キーと値をセットで保存できるデータの集合

配列はデータを呼び出すにはインデックス番号で記述
ハッシュはキーで呼び出す

if式
条件式の返り値が真だった場合に実行される
条件式　if式などの条件に記述する式のことをいう
式：評価される値が定まり、その値が返されるもののことを指す
rubyでは、falseとnilは偽。それ以外の値は真。数値や値は真の扱い

比較演算子　< > <= >= == !=
論理演算子　! (否定) &&(かつ,and) ||(または,or)

gets　　　　：文字列や数字をキーボードから入力する
while式　　 ：繰り返し処理
for式　　　 ：繰り返し処理
eachメソッド：要素を順位取り出す
break　　　 ：繰り返し処理を中断する

gets　キー入力待ちの状態になる
入力した値は、文字列として返される

while式　指定した条件式が真の間、繰り返し実行される
for式　指定したオブジェクトから順に値を取り出しながら繰り返される
　　　（指定したオブジェクトが終わるまで繰り返す）

each オブジェクト内の要素を順に取り出すメソッド

break 繰り返し処理を中断する
　　　while、for、eachなどの繰り返し文の中で使う


メソッド：複数の処理を1つにまとめて扱いやすくしたもののことをメソッドという

length
reverse
include?
methods





